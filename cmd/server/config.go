package main

import (
	"flag"
	"os"
)

// (4.2)Доработайте код, чтобы он умел принимать аргументы с использованием флагов.
// Аргументы сервера:
// •	Флаг -a=<ЗНАЧЕНИЕ> отвечает за адрес эндпоинта HTTP-сервера (по умолчанию localhost:8080).
// При попытке передать приложению незвестные флаги оно должно завершаться с сообщением о соответствующей ошибке.
// Во всех случаях должны присутствовать значения по умолчанию.

//(5.2) Доработайте сервер, чтобы он мог изменять свои параметры запуска по умолчанию через переменные окружения:
//•	ADDRESS отвечает за адрес эндпоинта HTTP-сервера.
//Приоритет параметров должен быть таким:
//•	Если указана переменная окружения, то используется она.
//•	Если нет переменной окружения, но есть аргумент командной строки (флаг), то используется он.
//•	Если нет ни переменной окружения, ни флага, то используется значение по умолчанию.

// основное хранилище настроек сервера
type ServerConfig struct {
	Endpoint string
}

func InitServerConfig() ServerConfig {

	cf := ServerConfig{}

	//Если нет переменной окружения, но есть аргумент командной строки (флаг), то используется он.
	flag.StringVar(&cf.Endpoint, "a", "localhost:8080", "the address:port endpoint for server to listen")
	flag.Parse()

	//Разбор переменных окружения
	if val, found := os.LookupEnv("ADDRESS"); found && (val != "") {
		cf.Endpoint = val
	}

	return cf
}
